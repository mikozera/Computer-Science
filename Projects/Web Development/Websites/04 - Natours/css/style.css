/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Reset */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;

  /* allows box-sizing to be inherited by elements (considered the best practice) */
  box-sizing: inherit;
}

/* Root configuration */
html {
  height: 100vh;

  /* assuming that the root font-size is 16px, we can calculate what is percentage results in a 10px root font-size ( 10/16 * 100) otherwise users who change their root font-size (for acessibility issues) would be disallowed to do it if we simply set it to a "fixed" 10px value (that's why percetanges work best); as a result, this allows us to convert between rem and px by just dividing by 10 */
  font-size: 62.5%;
}

/* General settings */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;

  color: #777;
  line-height: 1.7;

  padding: 3rem;

  box-sizing: border-box;
}

/* Header */
.header {
  height: 95vh;
  position: relative;

  background-image: linear-gradient(
      to bottom right,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

/* Logo */
.logo-box {
  position: absolute;

  top: 4rem;
  left: 4rem;
}

.logo {
  height: 3.5rem;
}

/* Header Text */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);

  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  margin-bottom: 6rem;

  /* Fixes the "shake" on the heading animations */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;

  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation: moveInLeft;
  animation-duration: 1000ms;
  animation-timing-function: ease-out;
}

.heading-primary-sub {
  display: block;

  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;

  animation: moveInRight 1000ms ease-out;
}

/* Heading animations */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInButton {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* General Button */
.btn:link,
.btn:visited {
  /* This button is considered text */
  display: inline-block;
  padding: 1.5rem 4rem;

  /* allows the ::after to be position absolutely to the origin */
  position: relative;

  text-transform: uppercase;
  text-decoration: none;

  border-radius: 10rem;

  /* adds all transitions to the button (depending on which state it is in) */
  transition: all 200ms;
}

.btn:hover {
  /* moves the button up 3px when hovering */
  transform: translateY(-0.3rem);

  /* adds a shadow when the button is hovered */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  /* moves the button up 1px in relation to link state (which would be 0,0) => goes from -3px to -1px */
  transform: translateY(-0.1rem);

  /* once the button is clicked, the shadow becomes more dull given a button press effect */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn::after {
  /* Trying to mimic the button */
  content: "";
  display: inline-block;
  border-radius: 10rem;

  /* dimensions are treated like child elements of the button */
  height: 100%;
  width: 100%;

  /* Places the second button right behind the original button */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  /* allows the fading-out transition to work */
  transition: all 400ms;
}

/* once you hover over the button, the ::after state will be triggered */
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);

  /* creates a fading-out effect with the transition */
  opacity: 0;
}

/* sets the fading-in effect (from the bottom) for a specific button */
.btn-animated {
  animation: moveInButton;
  animation-duration: 480ms;
  animation-timing-function: ease-out;
  animation-delay: 500ms;

  /* automatically applies the styles of the 0% keyframe when the animation starts */
  animation-fill-mode: backwards;
}

/* White button */
.btn-white {
  background-color: #fff;
  color: #777;
}

.btn-white::after {
  background-color: #fff;
}
